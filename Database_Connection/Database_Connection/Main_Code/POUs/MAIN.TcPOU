<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{4ef234f8-6ebd-4fcd-beba-a435a8463d67}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
    FB_SQLDatabaseEvt : FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
    FB_SQLCommandEvt  : FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S);
    FB_SQLResultEvt   : FB_SQLResultEvt(sNetID := '', tTimeout := T#5S);

    iStep: INT;
    SQL_Commands: ARRAY[1..2] OF STRING(255);
    iSampleNr: INT := 1;
    iLoadCellValue AT %I*: INT;
	iLoadCellPreviousValue : INT;
	iTempSensorValue AT %I*: INT;
	iEncoderValue AT %I*: INT;

    sSelectDataCommand : STRING(255);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE iStep OF
    0:
        iStep := 10;

    10: // Connect to Database
        FB_SQLDatabaseEvt.Connect(hDBID := 1);
        IF FB_SQLDatabaseEvt.bConnected THEN
            iStep := 20;
        END_IF

    20: // Create SQL Command Object
        FB_SQLDatabaseEvt.CreateCmd(pSQLCommand := ADR(FB_SQLCommandEvt));
        IF NOT FB_SQLDatabaseEvt.bBusy THEN
            iStep := 30;
        END_IF

    30: // Generate INSERT Commands
		SQL_Commands[1] := FC_SQL_InsertCommands_Encoder(iEncoderValue, iSampleNr);
		SQL_Commands[1] := FC_SQL_InsertCommands_TempSensor(iTempSensorValue, iSampleNr);
        //check if loadcell value changed
		IF ABS(iLoadCellValue - iLoadCellPreviousValue) > 100 THEN
			SQL_Commands[1] := FC_SQL_InsertCommands_LoadCell(iLoadCellValue, iSampleNr);
    		iSampleNr := iSampleNr + 1; // Increment sample number
    		iLoadCellPreviousValue := iLoadCellValue; // Update previous value tracker
		END_IF
		 iStep := 40;

    40: // Execute Insert Command
        IF FB_SQLCommandEvt.Execute(pSQLCmd := ADR(SQL_Commands[1]), cbSQLCmd := SIZEOF(SQL_Commands[1])) THEN
            iStep := 50;
        END_IF

    50: // Prepare SELECT Query
        sSelectDataCommand := 'SELECT TOP 10 * FROM [db_accessadmin].[TempSensor_Data] ORDER BY Time DESC;';
        iStep := 60;

    60: // Execute SELECT Command
         FB_SQLCommandEvt.ExecuteDataReturn(
            pSQLCmd := ADR(sSelectDataCommand),
            cbSQLCmd := SIZEOF(sSelectDataCommand),
            pSQLDBResult := ADR(FB_SQLResultEvt)); 
        iStep := 30;
   

END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>